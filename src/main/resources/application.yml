server:
  port: 6699
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
    context-path: /flowable-ui
spring:
  task:
    execution:
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
      thread-name-prefix: flowable-ui-task-Executor-
    scheduling:
      pool:
        size: 5
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/flowable_study
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    druid:
      # 初始化大小
      initial-size: 5
      # 最小连接数
      min-idle: 10
      # 最大连接数
      max-active: 20
      # 获取连接时的最大等待时间
      max-wait: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      validation-query: SELECT 1
  jmx:
    unique-names: true
    default-domain: ${spring.application.name}
  banner:
    location: classpath:/org/flowable/spring/boot/flowable-banner.txt
  security:
    filter:
      dispatcher-types: async,forward,request

# flowable 配置
flowable:
  async-executor-activate: true #关闭定时任务
  database-schema-update: true
  # For development purposes, data folder is created inside the sources ./data folder
  content:
    storage:
      root-folder: data/
      create-root: true
  common:
    app:
      role-prefix:
      idm-admin:
        user: admin
        password: test
  experimental:
    debugger:
      enabled: false
  process:
    definition-cache-limit: 512
    async:
      executor:
        default-timer-job-acquire-wait-time: PT5S
        default-async-job-acquire-wait-time: PT5S
  task:
    app:
      rest-enabled: true
  # Configures the way user credentials are verified when doing a REST API call:
  # 'any-user' : the user needs to exist and the password need to match. Any user is allowed to do the call (this is the pre 6.3.0 behavior)
  # 'verify-privilege' : the user needs to exist, the password needs to match and the user needs to have the 'rest-api' privilege
  # If nothing set, defaults to 'verify-privilege'
  rest:
    app:
      authentication-mode: verify-privilege
  # Enable form field validation after form submission on the engine side
  form-field-validation-enabled: false
  # Flowable Admin Properties

  # Passwords for rest endpoints and master configs are stored encrypted in the database using AES/CBC/PKCS5PADDING
  # It needs a 128-bit initialization vector (http://en.wikipedia.org/wiki/Initialization_vector)
  # and a 128-bit secret key represented as 16 ascii characters below
  #
  # Do note that if these properties are changed after passwords have been saved, all existing passwords
  # will not be able to be decrypted and the password would need to be reset in the UI.
  admin:
    app:
      security:
        encryption:
          credentials-i-v-spec: j8kdO2hejA9lKmm6
          credentials-secret-spec: 9FGl73ngxcOoJvmL
  idm:
    app:
      admin:
        user-id: admin
        password: test
        first-name: Test
        last-name: Administrator
        email: test-admin@example-domain.tld
      rest-enabled: true
  rest-api-enabled: true

logging:
  level:
    org:
      flowable: info

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: when_authorized
      roles: access-admin

